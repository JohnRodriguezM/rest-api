flujo de comunicacion de la api rest

frontend y backend,
el frontend recibde las interacciones del usuarios, el frontend peticiona al backend y muestra la info en el frontend dada por el backend

la api devuelve una respuesta en formato json
y con esos datos de manipula el dom y se actualiza ek html

spa (single page aplications)

a diferencia del server side rendering

carga HTML desde el servidor


-----------------------------
endpoints y query parameters

query permite "filtrar" por una consulta


_____________________________________
¿que son CORS?

----------------------------------------
¿que son los HTTP status codes?

van desde el 100 - 500...

los que estén del 200 - 300 son regularmente bien

200 - 300: redirecciones hacia otras rutas

400's: hay un error en la peticion del frontend

401:  no tengo autorizacion para acceder a la ruta
402: toca pagar para acceder a la informacion
404: not found

500's:
erores en el servidor


----------------------------------
¿que es un api key?

Es UNA de las formas en que el backend identifica quien está haciendo la peticion y para limitar ciertas cosas

autorizacion vs autenticacion

autenticacion: identificar (quien es quien)
autorizacion: que permisos tiene cada quien

-----------
¿que son los metodos HTTP?

GET: es el metodo por defecto de fetch
POST: crear
PUT: Update (editar toda la información)
PATCH: Update(editar solo una parte pequeña del elemento)
DELETE: Borrar

//* header de content-type

si enviamos un content-type que el backend no soporta probablemente nos va a arrojar un error

tipos de content-type:

- application/json
- application/xml
- application/x---www-form-urlencoded

AUDIO:

- audio/mpeg
- video/x-ms-wma

IMAGE:

- image/png
- image/jpeg
- image/gif

MULTIPART:

- multipart/form-data          // para trabajar con formularios, no enviar input por input, si no el paquete completo del formulario

TEXT:

- text/html
- text/css
- text/plain